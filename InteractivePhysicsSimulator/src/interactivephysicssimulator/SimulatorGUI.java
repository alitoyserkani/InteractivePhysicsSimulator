package interactivephysicssimulator;

import java.awt.MouseInfo;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.logging.Level;
import java.util.logging.Logger;


public class SimulatorGUI extends javax.swing.JFrame implements MouseListener {
    
    
    //double xMouse, yMouse;    
    boolean playOn = true;
    static boolean pieceBeingPlaced = false; //if piece is currenty being added to screen
    int currSimSpeed;
    boolean lineBeingAdded = false;
    static boolean ballBeingAdded = false;
    
    static Vector acceleration = new Vector(0,0);
    
    Thread t2;

  
    public SimulatorGUI() {
        initComponents();
        t2 = new Thread(new Runnable() {
        
      
        @Override
        public void run() {
            
            Simulator s = new Simulator(emulatorPanel); //starts simulator class
            
            int height = emulatorPanel.getHeight(); //gets dimensions of drawing panel
            int width = emulatorPanel.getWidth();
            
            //adds walls a line to line array
            s.lines.add(new Line(0,0,width,0));
            s.lines.add(new Line(0,0,0,height));
            s.lines.add(new Line(0,height,width,height));
            s.lines.add(new Line(width,0,width,height));
            
            while (true) {
                
//                if (resetButton.getModel().isPressed()) {
//                    for (int i=0;i<s.balls.size();i++) {
//                        s.balls.remove(i);
//                    }
//                    for (int i=s.lines.size()-1; i>3; i--) {
//                        s.lines.remove(i);
//                    }
//                }
                checkAcceleration(); //check spinners for acceleration
                
                if (pieceBeingPlaced == true) { //if a piece is being placed dont simulate
                    currSimSpeed = speedSlider.getValue(); //checks speed of program
                    
                    
                    try { //so the thread can keep up with the program
                        Thread.sleep(10);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SimulatorGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    if (ballBeingAdded == true) { 
                        Circle ball = BallGUI.cC;
                        s.addingBall(ball);                     
                        pieceBeingPlaced = false;
                        ballBeingAdded = false;
                        s.isObjPlaced = false;
                    }
                    else if (lineBeingAdded = true) {

                        s.addingLine();
                        pieceBeingPlaced = false;
                        lineBeingAdded = false;
                        //s.isLinePlaced = false;
                        playOn = true;
                        
                    }
                } else if (playOn == false) {
                    
                } else {
                    s.simulate();
                    
                    currSimSpeed = speedSlider.getValue();                    
                    
                    
                sleep(1000/(currSimSpeed+1));
                 
                
            }
            
          
            
        }
        }
        
    });
        t2.start(); //starts thread
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        emulatorPanel = new javax.swing.JPanel();
        pauseButton = new javax.swing.JToggleButton();
        speedSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addBall = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        removeObjButton = new javax.swing.JButton();
        gravityWeightBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        gravityDirectionBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        addLine = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        emulatorPanel.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout emulatorPanelLayout = new javax.swing.GroupLayout(emulatorPanel);
        emulatorPanel.setLayout(emulatorPanelLayout);
        emulatorPanelLayout.setHorizontalGroup(
            emulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        emulatorPanelLayout.setVerticalGroup(
            emulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        pauseButton.setBackground(new java.awt.Color(255, 102, 0));
        pauseButton.setFont(new java.awt.Font("SassoonCRInfantMedium", 0, 14)); // NOI18N
        pauseButton.setForeground(new java.awt.Color(255, 102, 0));
        pauseButton.setText("PAUSE");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        speedSlider.setBackground(new java.awt.Color(255, 153, 0));

        jLabel2.setFont(new java.awt.Font("SassoonCRInfantMedium", 1, 13)); // NOI18N
        jLabel2.setText("SPEED");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        addBall.setBackground(new java.awt.Color(255, 153, 51));
        addBall.setFont(new java.awt.Font("Sana", 0, 15)); // NOI18N
        addBall.setForeground(new java.awt.Color(255, 153, 0));
        addBall.setText("BALL (CIRCLE)");
        addBall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBallActionPerformed(evt);
            }
        });

        resetButton.setBackground(new java.awt.Color(255, 153, 0));
        resetButton.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        resetButton.setForeground(new java.awt.Color(255, 153, 0));
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        removeObjButton.setBackground(new java.awt.Color(255, 102, 0));
        removeObjButton.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        removeObjButton.setForeground(new java.awt.Color(255, 153, 0));
        removeObjButton.setText("REMOVE OBJECT");
        removeObjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeObjButtonActionPerformed(evt);
            }
        });

        gravityWeightBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Light", "Normal", "Heavy" }));
        gravityWeightBox.setSelectedIndex(2);

        jLabel1.setText("Gravity");

        gravityDirectionBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Down", "Up", "Left", "Right" }));
        gravityDirectionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gravityDirectionBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Gravity Direction");

        addLine.setBackground(new java.awt.Color(255, 153, 0));
        addLine.setForeground(new java.awt.Color(255, 153, 0));
        addLine.setText("LINE");
        addLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(emulatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jLabel2)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(speedSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addBall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(resetButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeObjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(gravityWeightBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel1)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gravityDirectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(emulatorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gravityWeightBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gravityDirectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addBall, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addLine, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeObjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        System.out.println("YO");
        if (playOn == false) {
            playOn = true;            
        }
        else playOn = false;
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void addBallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBallActionPerformed

        new BallGUI().setVisible(true);
          
    }//GEN-LAST:event_addBallActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        
    }//GEN-LAST:event_resetButtonActionPerformed

    private void removeObjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeObjButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeObjButtonActionPerformed

    private void addLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLineActionPerformed
        lineBeingAdded = true;
        pieceBeingPlaced = true;
        playOn = false;
    }//GEN-LAST:event_addLineActionPerformed

    private void gravityDirectionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravityDirectionBoxActionPerformed
        
    }//GEN-LAST:event_gravityDirectionBoxActionPerformed

    public void checkAcceleration() { //checks combo box values to change direction and weight of gravity
        
        double gravWeight;
        int chosenG = gravityWeightBox.getSelectedIndex();
        if (chosenG == 0) gravWeight = 0;
        
        else if (chosenG == 1) gravWeight = 0.05;
        
        else if (chosenG == 2) gravWeight = 0.98;
        
        else gravWeight = 2;
        /////
        
        int chosenD = gravityDirectionBox.getSelectedIndex();
        
        if (chosenD == 0) {
            acceleration.xComponent = 0; acceleration.yComponent = gravWeight;
        } else if (chosenD == 1) {
            acceleration.xComponent = 0; acceleration.yComponent = -gravWeight;
        } else if (chosenD == 2) {
            acceleration.xComponent = -gravWeight; acceleration.yComponent = 0;
        } else if (chosenD == 3) {
            acceleration.xComponent = gravWeight; acceleration.yComponent = 0;
        }
      
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimulatorGUI().setVisible(true);
                
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBall;
    private javax.swing.JButton addLine;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JPanel emulatorPanel;
    private javax.swing.JComboBox gravityDirectionBox;
    private javax.swing.JComboBox gravityWeightBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton pauseButton;
    private javax.swing.JButton removeObjButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JSlider speedSlider;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void sleep(int i) {
        try {
            Thread.sleep(i);
        } 
        catch (Exception e) {}
    }

}
